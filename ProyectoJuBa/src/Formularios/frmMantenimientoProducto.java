package Formularios;

import Objetos.producto;
import bd.ConexionBD;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jerson Junqui
 */
public class frmMantenimientoProducto extends javax.swing.JFrame {

    /**
     * Creates new form frmMantenimientoProducto
     */
    public frmMantenimientoProducto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbResultado = new javax.swing.JTable();
        tfDescripcion = new javax.swing.JTextField();
        cbTipo = new javax.swing.JComboBox<>();
        cbConsulta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbEliminar = new javax.swing.JButton();
        cbEditar = new javax.swing.JButton();
        cbNuevo = new javax.swing.JButton();
        cbSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("MANTENIMIENTO PRODUCTO");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 390, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 610, 10));

        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Producto", "Nombre", "Nombre Cientifico", "Proveedor", "Peso Ideal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbResultado);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 620, 150));
        getContentPane().add(tfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 210, 30));

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id Producto", "Nombre", "Nombre Cientifico", "Proveedor", "Peso Ideal" }));
        getContentPane().add(cbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 140, 30));

        cbConsulta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbConsulta.setForeground(new java.awt.Color(255, 0, 0));
        cbConsulta.setText("CONSULTA");
        cbConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(cbConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 120, 130, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 0));
        jLabel3.setText("Descripción:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 120, 30));

        cbEliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbEliminar.setForeground(new java.awt.Color(255, 0, 0));
        cbEliminar.setText("ELIMINAR");
        cbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(cbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 130, 40));

        cbEditar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbEditar.setForeground(new java.awt.Color(255, 0, 0));
        cbEditar.setText("EDITAR");
        cbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEditarActionPerformed(evt);
            }
        });
        getContentPane().add(cbEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, 130, 40));

        cbNuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbNuevo.setForeground(new java.awt.Color(255, 0, 0));
        cbNuevo.setText("NUEVO");
        cbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(cbNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, 130, 40));

        cbSalir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbSalir.setForeground(new java.awt.Color(255, 0, 0));
        cbSalir.setText("SALIR");
        cbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSalirActionPerformed(evt);
            }
        });
        getContentPane().add(cbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 370, 130, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/autenticacion.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean seleccionEliminacionValidaProducto(){
        int n = this.tbResultado.getSelectedRowCount();
        if(n==0){
            JOptionPane.showMessageDialog(this,"Debe seleccionar mínimo un registro para eliminar","Eliminación",JOptionPane.ERROR_MESSAGE);            
            return false;
        }
        int opcion=JOptionPane.showConfirmDialog(this, "Seguro que desea eliminar el/los registros?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if(JOptionPane.OK_OPTION==opcion){
            return true;
        }else{
            return false;
        }             
    }
    
    public void consultarRegistro(){
        String tipo = cbTipo.getSelectedItem().toString();
        String descripcion = tfDescripcion.getText();        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBD c = new ConexionBD();
                c.conectar();
                ArrayList<producto> registro = c.consultarProductos("","producto");
                ArrayList<producto> resultado = new ArrayList<producto>();
                //Consultar tipo y descripcion
                if (tipo.equals("Todos")){
                        resultado = registro;
                }else{
                    for (producto emp:registro){
                        if(tipo.equals("Id Producto")&&(descripcion.length()>0)){
                            if(String.valueOf(emp.getId_producto()).equals(descripcion)){
                                resultado.add(emp);
                            }
                        }else if(tipo.equals("Nombre")){
                            if(emp.getNombre().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(emp);
                            }
                        }else if(tipo.equals("Nombre Cientifico")){
                            if(emp.getNombre_cientifico().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(emp);
                            }
                        }else if(tipo.equals("Proveedor")){
                            if(emp.getProveedor().contains(descripcion.toUpperCase())){
                                resultado.add(emp);
                            }
                        }else if(tipo.equals("Peso Ideal")){
                            if(String.valueOf(emp.getPeso_ideal()).equals(descripcion)){
                                resultado.add(emp);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this,"Descripcion vacia.","Consulta Invalida",JOptionPane.ERROR_MESSAGE);
                            break;
                        }
                    }
                }

                DefaultTableModel dtm = (DefaultTableModel)tbResultado.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos
                for (producto em:resultado){
                    Object[] fila = new Object[5];
                    fila[0] = em.getId_producto();
                    fila[1] = em.getNombre();
                    fila[2] = em.getNombre_cientifico();
                    fila[3] = em.getProveedor();
                    fila[4] = em.getPeso_ideal();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar producto"+e);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar productos","Consulta",JOptionPane.ERROR_MESSAGE);
            System.out.println("consulta de registros productos: "+e);
        }
    }
    
    private void cbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEliminarActionPerformed
        ConexionBD c = new ConexionBD();
        if(seleccionEliminacionValidaProducto()){
            int col = 0;
            int fila = tbResultado.getSelectedRow();
            String identificacion = String.valueOf(tbResultado.getValueAt(fila,col));
            
            int id=Integer.valueOf(identificacion);
            System.out.println(id);
            try{
                c.conectar();
                if(c.eliminarProducto(id)){
                    JOptionPane.showMessageDialog(this,"Eliminacion Exitosa","Validación",JOptionPane.INFORMATION_MESSAGE);
                    consultarRegistro();
                }else{
                    JOptionPane.showMessageDialog(this,"Eliminacion Fallida","Validación",JOptionPane.ERROR_MESSAGE);
                }
                c.desconectar();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,"Ocurrio un problema durante la eliminacion","Validación",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_cbEliminarActionPerformed

    private boolean seleccionEdicionValidaProducto(){
        int n = tbResultado.getSelectedRowCount();
        if(n==0){
            JOptionPane.showMessageDialog(rootPane,"Debe seleccionar un registro para editar","Edición",JOptionPane.ERROR_MESSAGE);            
            return false;
        }else if(n>1){
            JOptionPane.showMessageDialog(this,"Debe seleccionar sólo un registro para editar","Edición",JOptionPane.ERROR_MESSAGE);                    
            return false;    
        }
        return true;
    }
    
    private void cbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEditarActionPerformed
        if(seleccionEdicionValidaProducto()){
            int fila = tbResultado.getSelectedRow();
            int col = 0;
            String id = String.valueOf(tbResultado.getValueAt(fila, col));
            frmEdicionProducto frm = new frmEdicionProducto(id,this);
            frm.setVisible(true);
        }
    }//GEN-LAST:event_cbEditarActionPerformed

    private void cbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNuevoActionPerformed
        frmIngresoNuevoProducto inp = new frmIngresoNuevoProducto();
        inp.setVisible(true);
    }//GEN-LAST:event_cbNuevoActionPerformed

    private void cbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_cbSalirActionPerformed

    private boolean formularioValido(){
        String tipo = cbTipo.getSelectedItem().toString();
        String descripcion = tfDescripcion.getText();
        if(tipo.equals("Id Producto") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Id producto","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Nombre") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar un nombre","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Nombre Cientifico") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el nombre cientifico","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Proveedor") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el proveedor","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Peso Ideal") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el peso ideal","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void cbConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbConsultaActionPerformed
        if (formularioValido()){
            consultarRegistro();
        }
    }//GEN-LAST:event_cbConsultaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cbConsulta;
    private javax.swing.JButton cbEditar;
    private javax.swing.JButton cbEliminar;
    private javax.swing.JButton cbNuevo;
    private javax.swing.JButton cbSalir;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbResultado;
    private javax.swing.JTextField tfDescripcion;
    // End of variables declaration//GEN-END:variables
}
