package Formularios;

import static Formularios.frmIngresoNuevaEmpresa.ingresar_id_usuario;
import Objetos.usuario;
import bd.ConexionBD;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julian
 */
public class frmBuscarUsuarioEmpresas extends javax.swing.JFrame {

    /**
     * Creates new form frmClientes
     */
    
    public frmBuscarUsuarioEmpresas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbusuarios = new javax.swing.JTable();
        cbConsulta = new javax.swing.JComboBox<>();
        tfdescripcion = new javax.swing.JTextField();
        btConsultar = new javax.swing.JButton();
        btSeleccionar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Busqueda Usuarios - Ingreso Empresas");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbusuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Cuenta", "Cedula", "Nombres", "Apellidos", "Correo", "Tipo", "Cargo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbusuarios.setToolTipText("");
        jScrollPane1.setViewportView(tbusuarios);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 800, 190));

        cbConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Cuenta", "Nombres", "Apellidos", "Cedula", "Estado" }));
        getContentPane().add(cbConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 140, 40));
        getContentPane().add(tfdescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 480, 40));

        btConsultar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btConsultar.setForeground(new java.awt.Color(255, 0, 51));
        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(btConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 110, 140, 40));

        btSeleccionar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btSeleccionar.setForeground(new java.awt.Color(255, 0, 51));
        btSeleccionar.setText("Seleccionar");
        btSeleccionar.setPreferredSize(new java.awt.Dimension(75, 30));
        btSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarActionPerformed(evt);
            }
        });
        getContentPane().add(btSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 150, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setText("BUSCAR USUARIOS DE EMPRESA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 410, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 590, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/autenticacion.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarActionPerformed
        if(seleccionValida()){
            int[] filas = tbusuarios.getSelectedRows();
            int col = 0;
            try{
                for(int i=0;i<filas.length;i++){                        
                    frmIngresoNuevaEmpresa.ingresar_id_usuario = (int) tbusuarios.getValueAt(filas[i],col);
                    System.out.println(ingresar_id_usuario); 
                }this.dispose();
            }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Ocurrió un error en la selección del id usuario!","Eliminación",JOptionPane.ERROR_MESSAGE);                        
            }
        } 
    }//GEN-LAST:event_btSeleccionarActionPerformed

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        // TODO add your handling code here:
        if (formularioConsultaValido()){
            consultarRegistroU();
        }
    }//GEN-LAST:event_btConsultarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    //funciones
    
    
    public void consultarRegistroU(){
        String tipo = cbConsulta.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();
        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBD c = new ConexionBD();
                c.conectar();
                
                ArrayList<usuario> registro = c.consultarUsuarios("","usuario");
                ArrayList<usuario> resultado = new ArrayList<usuario>();
                
                //Consultar tipo y descripcion
                if (tipo.equals("Todos")){
                        resultado = registro;
                }else{
                    for (usuario us:registro){
                        if(tipo.equals("Cedula")&&(descripcion.length()>0)){
                            if(us.getCedula().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Nombres")&&(descripcion.length()>0)){
                            if(us.getNombres().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Apellidos")&&(descripcion.length()>0)){
                            if(us.getApellidos().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Cuenta")&&(descripcion.length()>0)){
                            if(us.getCuenta().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Correo")&&(descripcion.length()>0)){
                            if(us.getCorreo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Id")&&(descripcion.length()>0)){
                            if(String.valueOf(us.getId()).equals(descripcion)){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Tipo")&&(descripcion.length()>0)){
                            if(us.getTipo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Cargo")&&(descripcion.length()>0)){
                            if(us.getCorreo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else if(tipo.equals("Estado")&&(descripcion.length()>0)){
                            if(us.getEstado().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(us);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this,"Descripcion vacia.","Consulta Invalida",JOptionPane.ERROR_MESSAGE);
                            break;
                        }
                    }
                }
                
                DefaultTableModel dtm = (DefaultTableModel)tbusuarios.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos for
                for (usuario u:resultado){
                    Object[] fila = new Object[9];
                    fila[0] = u.getId();
                    fila[1] = u.getCuenta();
                    fila[2] = u.getCedula();
                    fila[3] = u.getNombres();
                    fila[4] = u.getApellidos();
                    fila[5] = u.getCorreo();
                    fila[6] = u.getTipo();
                    fila[7] = u.getCargo();
                    fila[8] = u.getEstado();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar usuarios"+e);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar los registros","Consulta",JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }
    

    private boolean formularioConsultaValido(){
        String tipo = cbConsulta.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();
        if(tipo.equals("Cedula") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un número","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Nombres") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un Nombre","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Apellidos") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un Apellido","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Id") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un Identificador","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Cuenta") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un cuenta","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Estado") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un estado","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }
        return true;
    }
    
    
    //funcion para establecer seleccion valida al momento de editar
    private boolean seleccionValida(){ 
        int n = tbusuarios.getSelectedRowCount();
        if(n==0){
            JOptionPane.showMessageDialog(this,"Debe seleccionar mínimo un registro","Clientes",JOptionPane.ERROR_MESSAGE);
            return false;        
        }
        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btSeleccionar;
    private javax.swing.JComboBox<String> cbConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable tbusuarios;
    private javax.swing.JTextField tfdescripcion;
    // End of variables declaration//GEN-END:variables
}
