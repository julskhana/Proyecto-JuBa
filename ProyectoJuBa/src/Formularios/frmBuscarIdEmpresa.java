package Formularios;

import static Formularios.frmIngresoNuevaPiscina.ingresar_id_empresa;
import Objetos.empresa;
import bd.ConexionBD;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jerson Junqui
 */
public class frmBuscarIdEmpresa extends javax.swing.JFrame {

    /**
     * Creates new form frmBuscarIdEmpresa
     */
    public frmBuscarIdEmpresa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbConsultar = new javax.swing.JButton();
        tfDescripcion = new javax.swing.JTextField();
        Lista = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbId = new javax.swing.JTable();
        cbSeleccionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbConsultar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbConsultar.setForeground(new java.awt.Color(255, 0, 0));
        cbConsultar.setText("CONSULTAR");
        cbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(cbConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));
        getContentPane().add(tfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 190, 30));

        Lista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "NOMBRE" }));
        getContentPane().add(Lista, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 90, 30));

        tbId.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id Empresa", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbId);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 440, 110));

        cbSeleccionar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbSeleccionar.setForeground(new java.awt.Color(255, 0, 0));
        cbSeleccionar.setText("SELECCIONAR");
        cbSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeleccionarActionPerformed(evt);
            }
        });
        getContentPane().add(cbSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("BUSCAR ID EMPRESAS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 290, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/autenticacion.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-400, 0, 920, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean formularioConsultaValido(){
        String tipo = Lista.getSelectedItem().toString();
        String descripcion = tfDescripcion.getText();
        if(tipo.equals("Id Empresa") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un ID","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Nombre") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un Nombre","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }
        return true;
    }
    
    public void consultarRegistroE(){
        String tipo = Lista.getSelectedItem().toString();
        String descripcion = tfDescripcion.getText();
        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBD c = new ConexionBD();
                c.conectar();
                
                ArrayList<empresa> registro = c.consultarEmpresas("","empresa");
                ArrayList<empresa> resultado = new ArrayList<empresa>();
                
                //Consultar tipo y descripcion
                for (empresa us:registro){
                    if(tipo.equals("ID")){
                        String Id_empresa = String.valueOf(us.getId_empresa());
                            if(tfDescripcion.equals(Id_empresa)){
                                resultado.add(us);
                            }
                    }else if(tipo.equals("Nombre")&&(descripcion.length()>0)){
                        if(us.getNombre().toUpperCase().contains(descripcion.toUpperCase())){
                            resultado.add(us);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"Descripcion vacia.","Consulta Invalida",JOptionPane.ERROR_MESSAGE);
                        break;
                    }
                }
                
                DefaultTableModel dtm = (DefaultTableModel)tbId.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos for
                for (empresa e:resultado){
                    Object[] fila = new Object[2];
                    fila[0] = e.getId_empresa();
                    fila[1] = e.getNombre();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar empresas"+e);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar las empresas","Consulta",JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }
    
    private void cbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbConsultarActionPerformed
        if (formularioConsultaValido()){
            consultarRegistroE();
        }
    }//GEN-LAST:event_cbConsultarActionPerformed

    //funcion para establecer seleccion valida
    private boolean seleccionValida(){ 
        int n = tbId.getSelectedRowCount();
        if(n==0){
            JOptionPane.showMessageDialog(this,"Debe seleccionar mínimo un registro","Clientes",JOptionPane.ERROR_MESSAGE);
            return false;        
        }
        return true;
    }
    
    private void cbSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeleccionarActionPerformed
        if(seleccionValida()){
            int[] filas = tbId.getSelectedRows();
            int col = 0;
            try{
                for(int i=0;i<filas.length;i++){                        
                    frmIngresoNuevaPiscina.ingresar_id_empresa = (int) tbId.getValueAt(filas[i],col);
                    frmIngresoNuevaPiscina.tfId_empresa.setText(String.valueOf(ingresar_id_empresa));
                    System.out.println(ingresar_id_empresa); 
                }this.dispose();
            }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Ocurrió un error en la selección del id empresa!","Eliminación",JOptionPane.ERROR_MESSAGE);                        
            }
        }
    }//GEN-LAST:event_cbSeleccionarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Lista;
    private javax.swing.JButton cbConsultar;
    private javax.swing.JButton cbSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbId;
    private javax.swing.JTextField tfDescripcion;
    // End of variables declaration//GEN-END:variables
}
