package Formularios;

import Objetos.usuario;
import bd.ConexionBD;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jerson junqui
 */
public class frmMantenimientoUsuario extends javax.swing.JFrame {

    /**
     * Creates new form frmUsuarios
     */
    public frmMantenimientoUsuario() {
        initComponents();
        
        btEliminar.enable(false);
        btEditar.enable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbusuario = new javax.swing.JTable();
        cbtipo = new javax.swing.JComboBox<>();
        tfdescripcion = new javax.swing.JTextField();
        btConsultar = new javax.swing.JButton();
        btNuevousuario = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btEditar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btSalir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento Usuarios");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbusuario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbusuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Cuenta", "Nombres", "Apellidos", "Cedula", "Edad", "Direcci√≥n", "Telefono", "Celular", "Correo", "Sexo", "Tipo", "Cargo", "Estado", "Fecha Inicio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbusuario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 920, 260));

        cbtipo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Nombres", "Apellidos", "Sexo", "Tipo", "Cargo" }));
        getContentPane().add(cbtipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 170, 30));
        getContentPane().add(tfdescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 340, 30));

        btConsultar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(btConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, 120, 40));

        btNuevousuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btNuevousuario.setText("Nuevo");
        btNuevousuario.setMaximumSize(new java.awt.Dimension(80, 32));
        btNuevousuario.setMinimumSize(new java.awt.Dimension(80, 32));
        btNuevousuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevousuarioActionPerformed(evt);
            }
        });
        getContentPane().add(btNuevousuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 120, 40));

        btEliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btEliminar.setText("Eliminar");
        btEliminar.setMaximumSize(new java.awt.Dimension(80, 32));
        btEliminar.setMinimumSize(new java.awt.Dimension(80, 32));
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 420, 120, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 0));
        jLabel3.setText("MANTENIMIENTO USUARIO");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 350, 30));

        btEditar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 130, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Descripcion:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 130, 30));

        btSalir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 420, 120, 40));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 930, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/autenticacion.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNuevousuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevousuarioActionPerformed
        // TODO add your handling code here:
        /*
        frmIngresoUsuario ingresoU = new frmIngresoUsuario();
        ingresoU.setVisible(true);
        */
    }//GEN-LAST:event_btNuevousuarioActionPerformed
    private boolean formularioConsultaValidoA(){
        String tipo = cbtipo.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();
        if(tipo.equals("Nombres") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Nombre","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Apellidos") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Apellido","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Sexo") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Sexo","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Tipo") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Tipo","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(tipo.equals("Cargo") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,"Debe ingresar el Cargo","Consulta",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    public void consultarRegistro(){
        String tipo = cbtipo.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();        
        try{
            
            try{
                ConexionBD c = new ConexionBD();
                c.conectar();
                
                ArrayList<usuario> registro = c.consultarUsuarios("","usuario");
                ArrayList<usuario> resultado = new ArrayList<>();
                
                if (tipo.equals("Todos")){
                        resultado = registro;
                }else{
                    for (usuario u1:registro){
                        if(tipo.equals("Nombres")&&(descripcion.length()>0)){
                            if(u1.getNombres().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(u1);
                            }
                        }else if(tipo.equals("Apellidos")&&(descripcion.length()>0)){
                            if(u1.getApellidos().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(u1);
                            }
                        }else if(tipo.equals("Sexo")&&(descripcion.length()>0)){
                            if(u1.getSexo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(u1);
                            }
                        }else if(tipo.equals("Tipo")&&(descripcion.length()>0)){
                            if(u1.getTipo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(u1);
                            }
                        }else if(tipo.equals("Cargo")&&(descripcion.length()>0)){
                            if(u1.getCargo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(u1);
                            }else{
                                JOptionPane.showMessageDialog(this,"Descripcion vacia.","Consulta Invalida",JOptionPane.ERROR_MESSAGE);
                            break;
                            }
                        }
                    }

                    DefaultTableModel dtm = (DefaultTableModel)tbusuario.getModel();
                    dtm.setRowCount(0);

                    //recorriendo base de datos
                    for (usuario us:resultado){
                        Object[] fila = new Object[15];
                        fila[0] = us.getId();
                        fila[1] = us.getCuenta();
                        fila[2] = us.getNombres();
                        fila[3] = us.getApellidos();
                        fila[4] = us.getCedula();
                        fila[5] = us.getEdad();
                        fila[6] = us.getDireccion();
                        fila[7] = us.getTelefono();
                        fila[8] = us.getCelular();
                        fila[9] = us.getCorreo();
                        fila[10] = us.getSexo();
                        fila[11] = us.getTipo();
                        fila[12] = us.getCargo();
                        fila[13] = us.getEstado();
                        fila[14] = us.getFecha_inicio();
                        dtm.addRow(fila);
                    }
                    c.desconectar();
                }
            }catch (Exception e){
                System.out.println("error al consultar usuarios"+e);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurri√≥ un error al consultar los registros","Consulta",JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }
    
    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        if (formularioConsultaValidoA()){
            consultarRegistro();
            btEliminar.enable(true);
            btEditar.enable(true);
        }
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        // TODO add your handling code here:
        
        /*if (seleccionEliminacionValida()){
            ConexionBD c = new ConexionBD();
            try{
                c.conectar();
                int filas[] =tbusuario.getSelectedRows();
                    for (int i = 0; i < filas.length; i++) {
                        int fila = filas[i];
                        String id = tbusuario.getValueAt(fila,0).toString();
                        if(!c.eliminarUsuario(Integer.parseInt(id))){
                            JOptionPane.showMessageDialog(this,"Ocurri√≥ un error en la eliminaci√≥n","Eliminaci√≥n",JOptionPane.ERROR_MESSAGE);
                            return ;
                        }
                    }
            }catch(Exception e){
                System.out.println(e);
            }
            c.desconectar();
        }
        if(formularioConsultaValidoA()){
            consultarRegistro();}
        */
    }//GEN-LAST:event_btEliminarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        
    }//GEN-LAST:event_btEditarActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btSalirActionPerformed
    /*
    

    private boolean seleccionEliminacionValida(){ 
        int n = tbusuario.getSelectedRowCount();
        if(n==0){
            JOptionPane.showMessageDialog(this,"Debe seleccionar m√≠nimo un registro para eliminar","Eliminaci√≥n",JOptionPane.ERROR_MESSAGE);
            return false;        
        }
        int op = JOptionPane.showConfirmDialog(this, "Est√° seguro de eliminar los registros seleccionados?","Eliminaci√≥n",JOptionPane.YES_NO_OPTION);
        if(op==0)
            return true;
        else
            return false;
    }
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btNuevousuario;
    private javax.swing.JButton btSalir;
    private javax.swing.JComboBox<String> cbtipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbusuario;
    private javax.swing.JTextField tfdescripcion;
    // End of variables declaration//GEN-END:variables
}
